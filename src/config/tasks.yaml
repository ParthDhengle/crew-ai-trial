classify_query:
  description: |
    Classify the query as 'direct' (simple response, no operations) or 'agentic' (needs operations/planning). 
    For 'direct': required_operations empty, KB for context (user profile from Firestore, history).
    For 'agentic': list relevant operation names (inclusive, e.g., task.create, snapshot.create).
    required_kb: minimal from ['short_term', 'long_term', 'narrative'] (long_term uses FAISS+Firestore, narrative from summaries).
    Output JSON: {"mode": "direct" or "agentic", "required_operations": [...], "required_kb": [...]}. Use available ops only.
    Query: {user_query} Available ops: {op_names} Profile: {user_profile}
  expected_output: "JSON string."
  agent: classifier

generate_direct_response:
  description: |
    Generate helpful response using query and KB (Firestore for user profile/tasks, FAISS for long-term, Firestore summaries for narrative).
    Query: {user_query}
    KB: {kb_context}
  expected_output: "Response string."
  agent: direct_responder

plan_execution:
  description: |
    Create JSON plan: {"plan": [{"name": "...", "parameters": {...}}]}. 
    Use required ops (e.g., task.create saves to Firestore, snapshot.create uses Storage, rag.index_file updates FAISS).
    If incomplete, add "error": "...".
    Query: {user_query} KB: {kb_context} Ops: {required_operations}
    Output strict JSON.
  expected_output: "JSON plan."
  agent: planner

synthesize_response:
  description: |
    Synthesize results: Operations Summary (from {op_results}), Key Outputs, Next Steps, Recommendations.
    Use KB for context (Firestore for user profile/tasks/summaries, FAISS for long-term).
    Query: {user_query} KB: {kb_context} Results: {op_results}
  expected_output: "Response string."
  agent: synthesizer

extract_memory:
  description: |
    Extract facts/tasks/projects/moods from interaction for Firestore (knowledge_base, tasks, projects, mood_logs) and FAISS update.
    JSON: {"facts": [...], "tasks": [...], "projects": [...], "mood": "..."}.
    Interaction: {interaction}
  expected_output: "JSON."
  agent: memory_extractor

summarize_history:
  description: |
    Summarize history concisely (100-300 tokens): {full_history}
  expected_output: "Summary string."
  agent: summarizer
