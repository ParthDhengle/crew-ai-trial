# src/tools/operations/run_terminal_command.py
import subprocess
import shlex
from .utils.logger import setup_logger

logger = setup_logger()

# Whitelist for safe commands (expand as needed; prevent dangerous ones)
COMMAND_WHITELIST = ['start', 'open', 'code', 'spotify', 'chrome.exe', 'word', 'powerpnt', 'excel']  # e.g., 'start chrome.exe'

def run_terminal_command(command: str, timeout: int = 30, shell: bool = True) -> tuple[bool, str]:
    """Execute safe terminal command generated by LLM."""
    try:
        # Safety check: Only allow whitelisted prefixes
        cmd_parts = shlex.split(command)
        if cmd_parts[0] not in COMMAND_WHITELIST:
            logger.warning(f"Unsafe command blocked: {command}")  # Log block
            return False, f"Unsafe command: {command}. Only whitelisted allowed."
        
        result = subprocess.run(command, shell=shell, timeout=timeout, capture_output=True, text=True)
        if result.returncode == 0:
            logger.info(f"Executed command: {command} - Output: {result.stdout[:100]}...")  # Log success
            return True, result.stdout
        else:
            logger.error(f"Command failed: {command} - Error: {result.stderr}")  # Log error
            return False, result.stderr
    except subprocess.TimeoutExpired:
        logger.error(f"Command timeout: {command}")  # Log timeout
        return False, "Command timeout."
    except Exception as e:
        logger.error(f"Command execution error: {str(e)}")  # Log general error
        return False, str(e)